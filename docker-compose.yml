version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kanban_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: kanban_db
      POSTGRES_USER: kanban_user
      POSTGRES_PASSWORD: kanban_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    ports:
      - "5432:5432"
    networks:
      - kanban_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kanban_user -d kanban_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend API
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: kanban_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_CONNECTION_STRING: postgres://kanban_user:kanban_password@postgres:5432/kanban_db
      # Alternative discrete environment variables
      DB_NAME: kanban_db
      DB_USER: kanban_user
      DB_PASSWORD: kanban_password
      DB_HOST: postgres
      # JWT secrets (change these in production!)
      JWT_SECRET_KEY: your_jwt_secret_key_here_change_in_production
      ACCESS_TOKEN_SECRET: your_access_token_secret_here_change_in_production
    ports:
      - "3001:3001"
    networks:
      - kanban_network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Optional: Mount logs directory for debugging
      - api_logs:/app/logs

  # React Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: kanban_client
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - kanban_network
    depends_on:
      - api
    environment:
      - VITE_API_URL=http://localhost:3001

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kanban_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kanban.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - kanban_network
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - tools  # Optional service - start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  api_logs:
    driver: local

networks:
  kanban_network:
    driver: bridge